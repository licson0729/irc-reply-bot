// Generated by CoffeeScript 1.7.1
(function() {
  var EventEmitter, Senter, TextRouter, UTF8LengthSplit,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventEmitter = require('events').EventEmitter;

  Senter = require('./senter.js');

  UTF8LengthSplit = require('./util.js').UTF8LengthSplit;

  TextRouter = (function(_super) {
    __extends(TextRouter, _super);

    function TextRouter() {
      this.maxLength = 511;
    }

    TextRouter.prototype.output = function(message, to) {
      var item, temp, text, _i, _j, _len, _len1, _results;
      if (Array.isArray(message)) {
        message = message.join("\n");
      }
      message = message.split(/(?:\r\n|\n)/g);
      temp = [];
      for (_i = 0, _len = message.length; _i < _len; _i++) {
        text = message[_i];
        temp = temp.concat(UTF8LengthSplit(text, this.maxLength));
      }
      console.log(temp);
      console.log(temp.length);
      _results = [];
      for (_j = 0, _len1 = temp.length; _j < _len1; _j++) {
        item = temp[_j];
        _results.push(this.emit("output", item, to));
      }
      return _results;
    };

    TextRouter.prototype.input = function(message, from, to, channal) {
      var senter;
      senter = new Senter(from, to, message, channal);
      return this.emit("input", message, senter);
    };

    return TextRouter;

  })(EventEmitter);

  module.exports = TextRouter;

}).call(this);
